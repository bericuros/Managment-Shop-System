version: '3'

services:
  authenticationDatabase:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - '3306:3306'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 100
    volumes:
      - dataAuthenticationDatabase:/var/lib/mysql
  adminer:
    image: adminer
    ports:
      - '8080:8080'
  authDBMigration:
    image: authdbmigration
    environment:
      - DATABASE_URL=authenticationDatabase
    depends_on:
      authenticationDatabase:
        condition: service_healthy
  authentication:
    image: authentication
    environment:
      - DATABASE_URL=authenticationDatabase
    depends_on:
      - authDBMigration
    ports:
      - '5002:5002'
  storeDatabase:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - '5001:3306'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 100
    volumes:
      - dataStoreDatabase:/var/lib/mysql
  redis:
    image: redis
    ports:
      - '6379:6379'
  storeDBMigration:
    image: storedbmigration
    environment:
      - DATABASE_URL=storeDatabase
      - REDIS_URL=redis
    depends_on:
      storeDatabase:
        condition: service_healthy
  storeadmin:
    image: storeadmin
    environment:
      - DATABASE_URL=storeDatabase
      - REDIS_URL=redis
    ports:
      - '5003:5003'
    depends_on:
      - storeDBMigration
  storecustomer:
    image: storecustomer
    environment:
      - DATABASE_URL=storeDatabase
      - REDIS_URL=redis
    ports:
      - '5004:5004'
    depends_on:
      - storeDBMigration
  storewarehouse:
    image: storewarehouse
    environment:
      - DATABASE_URL=storeDatabase
      - REDIS_URL=redis
    ports:
      - '5006:5006'
    depends_on:
      - storeDBMigration
  storedaemon:
    image: storedaemon
    environment:
      - DATABASE_URL=storeDatabase
      - REDIS_URL=redis
    depends_on:
      - storeDBMigration

volumes:
  dataAuthenticationDatabase:
  dataStoreDatabase: